/* *
* In mathematics, the Fibonacci sequence is calculated by adding the previous two members of the sequence. The first few fibonacci numbers are
* 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...
* Considering the indices start from 1 the 6th fibonacci number in this sequence is 8 and is divisible by 1, 2, 4 and 8.
* You are given two indices L and R (L<=R) of this sequence and you have to calculate how many fibonacci numbers are divisible by M in range [L, R] inclusive.
*
* Input: -
* Input begins with a line containing a single integer T(1<=T<=500),
* denoting the number of test cases. T test cases follow.
* Each test case begins with a line containing three integers L R (1<=L<=R<=100000) and M (1<=M<=1018). 
*
* Output: -
* For each test case, output a single line containing the answer as an integer.
*/
#include<stdio.h>
program by Chinmoy Das
int main()
{
    int t, count;
    scanf("%d", &t);
    unsigned long long  i, l, r, m, c, b, a;
    while( t-- ) {
        scanf("%llu%llu%llu", &l, &r, &m);
        b=c=1;
        a=0;
        count=0;
        if( c%m==0 && l==1 ) {
        	count++;
        }
        if( l==1 ) {
        	l++;
        }
        for( i=2; i<l; i++ ) {
            if( c>m ) {
            	c-=m;
            }
            a=b;
            b=c;
            c=a+b;
        }
        for( i=l; i<=r; i++ ) {
            if( c>m ) {
            	c-=m;
            }
            a=b;
            b=c;
            if( c%m==0 ) {
            	count++;
            }
            c=a+b;
        }
        printf("%d\n", count);
    }
}