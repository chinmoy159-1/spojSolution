/* *
* In Byteland they have a very strange monetary system.
* Each Bytelandian gold coin has an integer number written on it. A coin n can be exchanged in a bank into three coins: n/2, n/3 and n/4.
* But these numbers are all rounded down (the banks have to make a profit).
* You can also sell Bytelandian coins for American dollars. The exchange rate is 1:1. But you can not buy Bytelandian coins.
* You have one gold coin. What is the maximum amount of American dollars you can get for it?
*
* Input:-
* The input will contain several test cases (not more than 10). Each testcase is a single line with a number n, 0 <= n <= 1 000 000 000. It is the number written on your coin.
*
* Output:-
* For each test case output a single line, containing the maximum amount of American dollars you can make.
*/
#include<stdio.h>
program by Chinmoy Das
long long a[10000001];
long long calc(long long n) {
	if( n<10000001 ) {
		if (a[n] == 0) {
			if (n < 12) {
				a[n] = n;
			} else {
				a[n] = calc(n/2) + calc(n/3) + calc(n/4);
			}
			return a[n];
		} else {
			return a[n];
		}
	}
	else {
		return calc (n/2) + calc (n/3) + calc (n/4);
	}
}
int main() {
    long long t;
    while( scanf("%lli", &t) == 1 ) {
        printf("%lli\n", calc(t));
    }
    return 0;
}